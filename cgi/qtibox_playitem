#!/usr/bin/perl -w

# QTIBox
# Edshare plugin to allow QTI items to be previewed

# ------------------------------------------------------------------------------
# (c) 2010 JISC-funded EASiHE project, University of Southampton
# Licensed under the Creative Commons 'Attribution non-commercial share alike' 
# licence -- see the LICENCE file for more details
# ------------------------------------------------------------------------------

use strict;
use EPrints;
use HTTP::Request::Common;
use LWP::UserAgent;
use Data::Dumper;
use EPrints::Plugin::QTIBoxUtils;

my $qtiengine_host = "qtiengine.qtitools.org";

my $session = EPrints::Session->new();
my $docid = $session->param("docid");

if (!defined($docid)) {
	return;
}

my $doc = EPrints::DataObj::Document->new($session, $docid);

# user agent object
my $ua = LWP::UserAgent->new();
$ua->max_redirect(0);

my $url = "/application/upload";
my @content = [$doc->local_path() . "/" . $doc->get_value("main")];

if ($doc->get_value("main") =~ /\.zip$/) {
	# if a content package, abort if it's got more than one item (or a test) 
	# or get the single item's xml
	my $data = EPrints::Plugin::QTIBoxUtils::qti_get_xml($doc, 1);
	if (!defined($data)) {
		die("qtibox: content package has more than a single item. aborting\n");
	}

	# upload just the one XML file from the zip
	@content = [undef, "uploaded.xml", Content_Type => "application/xml", Content => $data];
}

# request object
my $req = POST("http://" . $qtiengine_host . $url, Content_Type => "form-data", Content => [uploadedContent => @content]);

# make requests until we're redirected to the preview page
while (1) {
	#print STDERR "sending request:\n\n";
	#print STDERR $req->as_string();
	my $res = $ua->request($req);

	if (!$res->is_redirect()) {
		die("Didn't get a redirection to the QTIEngine preview page. Last page was $url");
		last;
	}

	# assuming the Location header points to something valid
	$url = $res->header("Location");

	# stop if we're at the preview page
	if ($url =~ /^http:\/\/$qtiengine_host\/(item\/play\/0|test\/sessionplay);/) {
		last;
	}

	# redirect
	$req = GET($url);
}

$session->redirect($url);
$session->terminate();

exit;
